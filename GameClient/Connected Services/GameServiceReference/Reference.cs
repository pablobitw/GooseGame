//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameClient.GameServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameServiceReference.IGameService")]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RegisterUser", ReplyAction="http://tempuri.org/IGameService/RegisterUserResponse")]
        bool RegisterUser(string username, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RegisterUser", ReplyAction="http://tempuri.org/IGameService/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string username, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LogIn", ReplyAction="http://tempuri.org/IGameService/LogInResponse")]
        bool LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/LogIn", ReplyAction="http://tempuri.org/IGameService/LogInResponse")]
        System.Threading.Tasks.Task<bool> LogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/VerifyAccount", ReplyAction="http://tempuri.org/IGameService/VerifyAccountResponse")]
        bool VerifyAccount(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/VerifyAccount", ReplyAction="http://tempuri.org/IGameService/VerifyAccountResponse")]
        System.Threading.Tasks.Task<bool> VerifyAccountAsync(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RequestPasswordReset", ReplyAction="http://tempuri.org/IGameService/RequestPasswordResetResponse")]
        bool RequestPasswordReset(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RequestPasswordReset", ReplyAction="http://tempuri.org/IGameService/RequestPasswordResetResponse")]
        System.Threading.Tasks.Task<bool> RequestPasswordResetAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/VerifyRecoveryCode", ReplyAction="http://tempuri.org/IGameService/VerifyRecoveryCodeResponse")]
        bool VerifyRecoveryCode(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/VerifyRecoveryCode", ReplyAction="http://tempuri.org/IGameService/VerifyRecoveryCodeResponse")]
        System.Threading.Tasks.Task<bool> VerifyRecoveryCodeAsync(string email, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UpdatePassword", ReplyAction="http://tempuri.org/IGameService/UpdatePasswordResponse")]
        bool UpdatePassword(string email, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/UpdatePassword", ReplyAction="http://tempuri.org/IGameService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task<bool> UpdatePasswordAsync(string email, string newPassword);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : GameClient.GameServiceReference.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.ClientBase<GameClient.GameServiceReference.IGameService>, GameClient.GameServiceReference.IGameService {
        
        public GameServiceClient() {
        }
        
        public GameServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterUser(string username, string email, string password) {
            return base.Channel.RegisterUser(username, email, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string username, string email, string password) {
            return base.Channel.RegisterUserAsync(username, email, password);
        }
        
        public bool LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
        
        public bool VerifyAccount(string email, string code) {
            return base.Channel.VerifyAccount(email, code);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyAccountAsync(string email, string code) {
            return base.Channel.VerifyAccountAsync(email, code);
        }
        
        public bool RequestPasswordReset(string email) {
            return base.Channel.RequestPasswordReset(email);
        }
        
        public System.Threading.Tasks.Task<bool> RequestPasswordResetAsync(string email) {
            return base.Channel.RequestPasswordResetAsync(email);
        }
        
        public bool VerifyRecoveryCode(string email, string code) {
            return base.Channel.VerifyRecoveryCode(email, code);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyRecoveryCodeAsync(string email, string code) {
            return base.Channel.VerifyRecoveryCodeAsync(email, code);
        }
        
        public bool UpdatePassword(string email, string newPassword) {
            return base.Channel.UpdatePassword(email, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePasswordAsync(string email, string newPassword) {
            return base.Channel.UpdatePasswordAsync(email, newPassword);
        }
    }
}
